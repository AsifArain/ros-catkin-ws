<launch>
  <arg name="port" default="$(optenv HUSKY_PORT /dev/prolific)" />

  <node pkg="clearpath_base" type="kinematic_node" name="husky_kinematic" ns="husky">
    <param name="port" value="$(arg port)" />
    <rosparam>    
      cmd_fill: True
      data:
        system_status: 10
        safety_status: 10
        encoders: 50 #10
        differential_speed: 50 #10
        differential_output: 50 #10
        power_status: 1
    </rosparam>
  </node>

  <!-- Publish diagnostics information from low-level MCU outputs -->
  <node pkg="husky_base" name="husky_base_diagnostics" type="diagnostics_publisher" />
	
  <!-- Publish wheel odometry from MCU encoder data -->
  <node pkg="husky_base" name="husky_basic_odom_gasbot" type="basic_odom_publisher_gasbot2" >
	<!--param name="gyro_scale_correction" value="1.0" /-->
	<param name="publish_tf" value="false" />
	<param name="parent_frame" value="odom" />
	<param name="child_frame" value="base_footprint" />
	<!--param name="child_frame" value="odom_base_link" /-->
  </node>
  
  <!-- Diagnostic Aggregator -->
  <node pkg="diagnostic_aggregator" type="aggregator_node" name="diagnostic_aggregator">
    <rosparam command="load" file="$(find husky_base)/config/diagnostics.yaml"/>
  </node>
</launch>
